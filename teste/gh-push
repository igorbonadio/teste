#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
$LOAD_PATH.unshift(File.dirname(__FILE__))

require 'octokit'
require 'gh-push'

github = Octokit::Client.new(:access_token => ARGV[0])

repo = ARGV[1]
ref = ARGV[2]
input_dir = ARGV[3]
output_dir = ARGV[4]
commit_msg = ARGV[5]

sha_latest_commit = github.ref(repo, ref).object.sha
sha_base_tree = github.commit(repo, sha_latest_commit).commit.tree.sha

def each_dir(path, &block)
  Dir.foreach(path) do |item|
    next if item == '.' or item == '..'
    if File.directory? File.join(path, item)
      each_dir(File.join(path, item), &block)
    else
      block.call(File.join(path, item))
    end
  end
end

files = []
each_dir(input_dir) do |item|
  blob_sha = github.create_blob(repo, Base64.encode64(File.open(item, "r").readlines.join), "base64")
  files << ({
    :path => File.join(output_dir, item.split("/")[1..-1].join("/")),
    :mode => "100644",
    :type => "blob",
    :sha => blob_sha
  })
end

p files

sha_new_tree = github.create_tree(repo, files, {:base_tree => sha_base_tree }).sha
sha_new_commit = github.create_commit(repo, commit_msg, sha_new_tree, sha_latest_commit).sha
updated_ref = github.update_ref(repo, ref, sha_new_commit)

puts updated_ref
